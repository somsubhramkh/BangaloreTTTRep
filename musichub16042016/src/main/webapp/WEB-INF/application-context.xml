<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 
 
<!-- content moved to dispatcher-servlet for experiment-->
<!-- <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
<beans:property name="driverClassName" value="org.h2.Driver" />
<beans:property name="url" value="jdbc:h2:tcp://localhost/~/test" />
<beans:property name="username" value="sa" />
<beans:property name="password" value="" />
</beans:bean>



<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<beans:property name="dataSource" ref="dataSource" />

<beans:property name="hibernateProperties">
<beans:props>
<beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect
</beans:prop>
<beans:prop key="hibernate.show_sql">true</beans:prop>
<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
</beans:props>
</beans:property>

<beans:property name="packagesToScan">
<beans:array>
<beans:value>musichub16042016.model</beans:value>
</beans:array>
</beans:property>
</beans:bean>

<beans:bean id="productDAO" class="musichub16042016.dao.ProductDAOImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
<beans:bean id="productService" class="musichub16042016.service.ProductServiceImpl">
		<beans:property name="productDAO" ref="productDAO"></beans:property>
	</beans:bean>
	
	<context:component-scan base-package="musichub16042016" />
	<tx:annotation-driven transaction-manager="transactionManager"/>


<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
<beans:property name="sessionFactory" ref="sessionFactory" />
</beans:bean>
 -->
<!-- content moved to dispatcher-servlet for experiment-->	
	



 
 
 
 
 <!--  
 	DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure

	Enables the Spring MVC @Controller programming model
	<annotation-driven />

	Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory
	<resources mapping="/resources/**" location="/resources/" />

<context:component-scan base-package="musichub16042016" />

	Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url" value="jdbc:h2:tcp://localhost/~/test" />
        <beans:property name="username" value="sa" />
        <beans:property name="password" value="" />
    </beans:bean>

	Hibernate 4 SessionFactory Bean definition
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>musichub16042016.Product</beans:value>
			</beans:list>
		</beans:property>
		        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                
            </beans:props>
        </beans:property>
	</beans:bean>
	
	<beans:bean id="productDAO" class="musichub16042016.ProductDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productService" class="musichub16042016.ProductServiceImpl">
		<beans:property name="productDAO" ref="productDAO"></beans:property>
	</beans:bean>
	
	
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
 
  
 
 
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url" value="jdbc:h2:tcp://localhost/~/test" />
        <beans:property name="username" value="sa" />
        <beans:property name="password" value="" />
    </beans:bean>
 
 <beans:bean id="productDAO" class="musichub16042016.ProductDAOImpl">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    <beans:bean id="productService" class="musichub16042016.ProductServiceImpl">
        <beans:property name="productDAO" ref="productDAO"></beans:property>
    </beans:bean>
 
 
 <context:component-scan base-package="musichub16042016" />
 
    Hibernate 4 SessionFactory Bean definition
    <beans:bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        
        
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>musichub16042016.model.Product</beans:value>
            </beans:list>
        </beans:property>
        
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                
            </beans:props>
        </beans:property>
        
                
     <beans:property name="packagesToScan">
         <beans:array>
              <beans:value>musichub16042016.model</beans:value>
              
         </beans:array>
     </beans:property>       

     

        
        <beans:property name="packagesToScan">
           <beans:list><beans:value>musichub16042016</beans:value></beans:list>
        
        </beans:property>
    </beans:bean>
    </beans:bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
     
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    
      
    <beans:bean id="productDAO" class="musichub16042016.ProductDAO">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    <beans:bean id="productService" class="musichub16042016.ProductDAOImpl">
        <beans:property name="productDAO" ref="productDAO"/>
    </beans:bean>
    
<beans:bean id="transactionManager"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <beans:property name="sessionFactory" ref="sessionFactory" />
</beans:bean>
  -->
</beans:beans>